$breakpoints: (
        'sm': 600px,
        'md': 960px,
        'lg': 1264px,
        'xl': 1904px
);

$mobile-breakpoint: map-get($breakpoints, 'md');
$displayTypes: ('none', 'flex', 'grid', 'block');
$sizes: (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);

$marginMap: (
        'ma': margin,
        'mb': margin-bottom,
        'mt': margin-top,
        'mr': margin-right,
        'ml': margin-left,
);

$paddingMap: (
        'pa': padding,
        'pb': padding-bottom,
        'pt': padding-top,
        'pr': padding-right,
        'pl': padding-left,
);

@each $size in $sizes {

  @each $className, $property in $marginMap {
    .#{$className}-#{$size} {
      #{$property}: #{4 * $size}px !important;
    }
  }

  .my-#{$size} {
    margin-top: #{4 * $size}px !important;
    margin-bottom: #{4 * $size}px !important;;
  }

  .mx-#{$size} {
    margin-left: #{4 * $size}px !important;
    margin-right: #{4 * $size}px !important;;
  }

  @each $className, $property in $paddingMap {
    .#{$className}-#{$size} {
      #{$property}: #{4 * $size}px !important;
    }
  }

  .py-#{$size} {
    padding-bottom: #{4 * $size}px !important;
    padding-top: #{4 * $size}px !important;;
  }

  .px-#{$size} {
    padding-left: #{4 * $size}px !important;
    padding-right: #{4 * $size}px !important;;
  }
}


@each $size in $sizes {
  @each $name, $width in $breakpoints {
    @media all and (min-width: #{$width}) {
      @each $className, $prop in $marginMap {
        .#{$className}-#{$name}-#{$size} {
          #{$prop}: #{4 * $size}px !important;
        }
      }

      .mx-#{$name}-#{$size} {
        margin-left: #{4 * $size}px !important;
        margin-right: #{4 * $size}px !important;
      }

      .my-#{$name}-#{$size} {
        margin-top: #{4 * $size}px !important;
        margin-bottom: #{4 * $size}px !important;
      }
      //.mt-#{$name}-#{$size} {
      //  margin-top: #{4 * $size}px !important;
      //}

      @each $className, $prop in $paddingMap {
        .#{$className}-#{$name}-#{$size} {
          #{$prop}: #{4 * $size}px !important;
        }
      }

      .px-#{$name}-#{$size} {
        padding-left: #{4 * $size}px !important;
        padding-right: #{4 * $size}px !important;;
      }

      .py-#{$name}-#{$size} {
        padding-top: #{4 * $size}px !important;
        padding-bottom: #{4 * $size}px !important;;
      }
    }
  }
}

.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-column-gap: 4px;
}

.grid-gap-0 {
  grid-column-gap: 0;
}

.grid-row-gap-0 {
  grid-row-gap: 0;
}

@for $i from 1 through 10 {
  .grid-gap-#{$i} {
    grid-column-gap: #{4 * $i}px !important;
  }
}

@for $i from 1 through 10 {
  @each $name, $width in $breakpoints {
    @media all and (min-width: #{$width}) {
      .grid-gap-#{$name}-#{$i} {
        grid-column-gap: #{4 * $i}px !important;
      }
    }
  }
}

@for $i from 1 through 10 {
  .grid-row-gap-#{$i} {
    grid-row-gap: #{4 * $i}px !important;
  }
}

@for $i from 1 through 10 {
  @each $name, $width in $breakpoints {
    @media all and (min-width: #{$width}) {
      .grid-row-gap-#{$name}-#{$i} {
        grid-row-gap: #{4 * $i}px !important;
      }
    }
  }
}

@for $i from 1 through 12  {
  .col-#{$i} {
    grid-column: span #{$i};
  }
}

@for $i from 1 through 12 {
  @each $name, $width in $breakpoints {
    @media all and (min-width: #{$width}) {
      .col-#{$name}-#{$i} {
        grid-column: span #{$i};
      }
    }
  }
}

@each $type in $displayTypes {
  .d-#{$type} {
    display: #{$type};
  }
}

@each $type in $displayTypes {
  @each $name, $width in $breakpoints {
    @media all and (min-width: #{$width}) {
      .d-#{$name}-#{$type} {
        display: #{$type}!important;
      }
    }
  }
}

.justify-center {
  justify-content: center !important;
}

.align-center {
  align-items: center;
}

.align-start {
  align-items: start;
}

.align-end {
  align-items: end;
}

.justify-end {
  justify-content: end !important;
}

.justify-start {
  justify-content: start !important;
}

.justify-space-between {
  justify-content: space-between !important;
}

.flex-column {
  flex-direction: column!important;
}

.flex-full-content {
  flex: 1 1 auto;
}

.flex-1 {
  flex: 1 1 0%
}

.flex-wrap {
  flex-wrap: wrap;
}

.mx-auto {
  margin-right: auto !important;
  margin-left: auto !important;
}

.my-auto {
  margin-top: auto !important;
  margin-bottom: auto !important;
}

.ml-auto {
  margin-left: auto !important;
}

.mr-auto {
  margin-right: auto !important;
}

.mt-auto {
  margin-top: auto !important;
}

.mb-auto {
  margin-bottom: auto !important;
}

.h-100 {
  height: 100%;
}

.h-screen {
  height: 100vh
}

.min-h-screen {
  min-height:100vh
}

.w-100 {
  width: 100%;
}

.w-50 {
  width: 50%;
}

.w-screen {
  width:100vw
}

@for $i from 1 through 10 {
  @each $name, $width in $breakpoints {
    @media all and (min-width: #{$width}) {
      .w-#{$name}-#{$i} {
        width: #{$i * 10} + '%' !important;
      }
    }
  }
}

.cursor-pointer {
  cursor: pointer;
}

.position-absolute {
  position: absolute;
}

.position-relative {
  position: relative;
}

.text-center {
  text-align: center;
}

.text-start {
  text-align: start;
}

.text-uppercase {
  text-transform: uppercase !important;
}

.text-underline {
  text-decoration: underline !important;
}

.text-line-through {
  text-decoration: line-through !important;
}

.text-no-decoration {
  text-decoration: none;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-hidden {
  overflow-y: hidden;
}

.overflow-y-auto {
  overflow-y: auto;
}

.align-content-center {
  align-content: center;
}

.rounded {
  border-radius: 50%;
}
